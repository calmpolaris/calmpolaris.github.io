{"meta":{"title":"轻语的博客","subtitle":null,"description":"永远相信美好的事情即将发生","author":"轻语","url":"https://calmpolaris.github.io"},"pages":[{"title":"","date":"2018-04-22T07:42:15.511Z","updated":"2018-04-22T07:42:15.511Z","comments":true,"path":"404.html","permalink":"https://calmpolaris.github.io/404.html","excerpt":"","text":""},{"title":"categories","date":"2018-04-22T07:16:05.000Z","updated":"2018-04-22T07:50:03.463Z","comments":false,"path":"categories/index.html","permalink":"https://calmpolaris.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-04-22T02:51:28.000Z","updated":"2018-04-22T07:49:54.427Z","comments":false,"path":"tags/index.html","permalink":"https://calmpolaris.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Test","slug":"Test","date":"2019-05-30T10:43:14.000Z","updated":"2019-05-30T10:44:34.020Z","comments":true,"path":"2019/05/30/Test/","link":"","permalink":"https://calmpolaris.github.io/2019/05/30/Test/","excerpt":"","text":"This is a video.(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"/2019/05/30/Test/刘欣Liuxin.mp4\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","categories":[],"tags":[]},{"title":"IDEA中使用JSP的注意点","slug":"IDEA中使用JSP的Request相关方法未找到的解决方法","date":"2019-04-26T14:48:14.000Z","updated":"2019-04-26T16:41:57.909Z","comments":true,"path":"2019/04/26/IDEA中使用JSP的Request相关方法未找到的解决方法/","link":"","permalink":"https://calmpolaris.github.io/2019/04/26/IDEA中使用JSP的Request相关方法未找到的解决方法/","excerpt":"","text":"作为一个IDEA的不熟练使用者，我在使用IDEA编写struts2以及spring框架使用JSP调用JAVA时，遇到了IDEA的提示1Cannot resolve method &apos;***&apos; 调用的这些全部来自于request库在查询了相关问题之后，我确定了这次问题所在： IDEA中使用预置的IDEA模板创建相关的WEB项目是不会自动在lib文件夹下导入TOMCAT以及相关servlet包解决方法：IDEA-&gt;file-&gt;project Structure-&gt;Libraries 在此项中点击加号，将tomcat\\lib 文件夹中的servlet-api.jar，jsp-api.jar,tomcat-api.jar三个包导入即可。在导入包之后，IDEA显示正常。","categories":[{"name":"踩的小坑","slug":"踩的小坑","permalink":"https://calmpolaris.github.io/categories/踩的小坑/"}],"tags":[{"name":"IDEA","slug":"IDEA","permalink":"https://calmpolaris.github.io/tags/IDEA/"},{"name":"JAVA","slug":"JAVA","permalink":"https://calmpolaris.github.io/tags/JAVA/"}]},{"title":"My Hexo","slug":"my-hexo","date":"2018-04-14T01:44:59.000Z","updated":"2019-05-30T10:40:45.147Z","comments":true,"path":"2018/04/14/my-hexo/","link":"","permalink":"https://calmpolaris.github.io/2018/04/14/my-hexo/","excerpt":"","text":"经过了长达半个月的学习时期，我终于将博客部署在了我的github上，在这里作为第一篇博客，记录下自己的心酸历程 环境搭建github只支持静态博客，当前较为成熟的解决方案为jekyll和hexo，最初我选择了jekyll……在经历多次本地服务启动失败后，我选择了hexo作为博客解决方案。hexo运行环境需要node.js，上传方法使用Git hexo本地服务安装node在安装之后可以win+R打开运行框输入node -v和npm -v来检测是否安装成功在资源管理器内选择自己喜欢的地方，我选择的是F盘，cmd下输入npm install hexo -g安装hexo输入hexo init初始化该文件夹，成功就会出现“Start blogging with Hexo！”，输入npm install安装所需的组件输入hexo g，使用hexo引擎将网页静态化输入hexo s，启动hexo至此，hexo本地服务就搭建完成了，可以使用127.0.0.1:4000来访问 链接远程库Git安装之后只要在资源管理器任意空白处点右键，有git Bash和git GUI出现，就证明安装成功了github创建自己的账户并且创建自己的账户名+github.io（注：其他仓库名会无法显示） 配置Git个人信息1.设置Git的user name和email：(如果是第一次的话)打开git Bash 输入12git config --global user.name \"xujun\"git config --global user.email \"yourname@github.com\" 2.生成密钥1ssh-keygen -t rsa -C \"yourname@github.com\" 配置Deployment在hexo根目录下找到_config.yml，找到Deployment，按照如下修改1234deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master 在C盘的用户目录文件下找到.ssh目录，里面有id_rsa.pub文件，将里面的全部复制到github上添加SSH密钥就可以了。 至此，配置完毕，你可以使用hexo d来部署你的博客，博客网址为yourname.github.io之后就是愉快的博客建设之旅了","categories":[{"name":"hexo","slug":"hexo","permalink":"https://calmpolaris.github.io/categories/hexo/"}],"tags":[]}]}